#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef tree<long long,null_type,less_equal<long long>,rb_tree_tag,tree_order_statistics_node_update> ordered_set; // ordered_multiset (a1<=a2<=...<=an)
typedef tree<long long,null_type,less<long long>,rb_tree_tag,tree_order_statistics_node_update> ordered_set2;// ordered_set (a1<a2<a3...)
typedef tree<long long,null_type,greater_equal<long long>,rb_tree_tag,tree_order_statistics_node_update> ordered_set; // ordered_multiset (a1>=a2>=...>=an)
typedef tree<long long,null_type,greater<long long>,rb_tree_tag,tree_order_statistics_node_update> ordered_set2;// ordered_set (a1>a2>a3...)

// set.order_of_key(x) : returns number of elements < x
// *set.find_by_order(x) : find the xth element in the set (0 - based)
// O(logn)
 
